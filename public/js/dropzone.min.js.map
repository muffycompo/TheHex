{"version":3,"sources":["dropzone.js"],"names":["Dropzone","Emitter","camelize","contentLoaded","detectVerticalSquash","drawImageIOSFix","noop","without","__slice","slice","__hasProp","hasOwnProperty","__extends","child","parent","ctor","this","constructor","key","call","prototype","__super__","addEventListener","on","event","fn","_callbacks","push","emit","args","callback","callbacks","_i","_len","arguments","length","apply","removeListener","off","removeAllListeners","removeEventListener","i","splice","_super","element","options","elementOptions","fallback","_ref","version","defaultOptions","previewTemplate","replace","clickableElements","listeners","files","document","querySelector","nodeType","Error","dropzone","instances","optionsForElement","extend","forceFallback","isBrowserSupported","url","getAttribute","acceptedFiles","acceptedMimeTypes","method","toUpperCase","getExistingFallback","parentNode","removeChild","previewsContainer","getElement","clickable","getElements","init","resolveOption","events","withCredentials","parallelUploads","uploadMultiple","maxFilesize","paramName","createImageThumbnails","maxThumbnailFilesize","thumbnailWidth","thumbnailHeight","filesizeBase","maxFiles","params","ignoreHiddenFiles","autoProcessQueue","autoQueue","addRemoveLinks","capture","dictDefaultMessage","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictCancelUpload","dictCancelUploadConfirmation","dictRemoveFile","dictRemoveFileConfirmation","dictMaxFilesExceeded","accept","file","done","messageElement","span","className","getElementsByTagName","test","createElement","appendChild","textContent","getFallbackForm","resize","info","srcRatio","trgRatio","srcX","srcY","srcWidth","width","srcHeight","height","optWidth","optHeight","trgHeight","trgWidth","drop","e","classList","remove","dragstart","dragend","dragenter","add","dragover","dragleave","paste","reset","addedfile","node","removeFileEvent","removeLink","_j","_k","_len1","_len2","_ref1","_ref2","_results","previewElement","trim","querySelectorAll","name","innerHTML","filesize","size","_removeLink","_this","preventDefault","stopPropagation","status","UPLOADING","confirm","removeFile","removedfile","_updateMaxFilesReachedClass","thumbnail","dataUrl","thumbnailElement","alt","src","setTimeout","error","message","errormultiple","processing","processingmultiple","uploadprogress","progress","bytesSent","nodeName","value","style","totaluploadprogress","sending","sendingmultiple","success","successmultiple","canceled","canceledmultiple","complete","completemultiple","maxfilesexceeded","maxfilesreached","queuecomplete","object","objects","target","val","getAcceptedFiles","accepted","getRejectedFiles","getFilesWithStatus","getQueuedFiles","QUEUED","getUploadingFiles","getActiveFiles","eventName","noPropagation","setupHiddenFileInput","tagName","setAttribute","contains","hiddenFileInput","body","visibility","position","top","left","addFile","URL","window","webkitURL","updateTotalUploadProgress","returnValue","efct","dataTransfer","effectAllowed","_error","dropEffect","forEach","clickableElement","click","evt","elementInside","enable","destroy","disable","removeAllFiles","indexOf","activeFiles","totalBytes","totalBytesSent","totalUploadProgress","upload","total","_getParamName","n","existingFallback","fields","fieldsString","form","getFallback","elements","el","setupEventListeners","elementListeners","listener","_results1","removeEventListeners","cancelUpload","cutoff","selectedSize","selectedUnit","unit","units","Math","pow","round","items","webkitGetAsEntry","_addFilesFromItems","handleFiles","clipboardData","entry","item","isFile","getAsFile","isDirectory","_addFilesFromDirectory","kind","directory","path","dirReader","entriesReader","createReader","entries","substring","fullPath","readEntries","console","log","isValidFile","ADDED","_enqueueThumbnail","_errorProcessing","enqueueFile","enqueueFiles","processQueue","_thumbnailQueue","_processingThumbnail","type","match","_processThumbnailQueue","createThumbnail","shift","cancelIfNecessary","fileReader","FileReader","onload","result","createThumbnailFromUrl","readAsDataURL","imageUrl","img","canvas","ctx","resizeInfo","_ref3","getContext","trgX","trgY","toDataURL","onerror","processingLength","queuedFiles","processFiles","processFile","uploadFiles","_getFilesWithXhr","xhr","groupedFile","groupedFiles","CANCELED","abort","option","uploadFile","formData","handleError","headerName","headerValue","headers","input","inputName","inputType","progressObj","response","updateProgress","_l","_len3","_m","_ref4","_ref5","XMLHttpRequest","open","allFilesFinished","loaded","readyState","responseText","getResponseHeader","JSON","parse","_finished","onprogress","Accept","Cache-Control","X-Requested-With","setRequestHeader","FormData","append","hasAttribute","selected","toLowerCase","checked","send","SUCCESS","ERROR","forElement","autoDiscover","discover","checkElements","dropzones","blacklistedBrowsers","capableBrowser","regex","File","FileList","Blob","navigator","userAgent","list","rejectedItem","str","charAt","string","div","childNodes","container","els","Array","question","rejected","baseMimeType","mimeType","validType","split","jQuery","each","module","exports","ACCEPTED","PROCESSING","alpha","data","ey","ih","iw","py","ratio","sy","naturalWidth","naturalHeight","drawImage","getImageData","sx","sw","sh","dx","dy","dw","dh","vertSquashRatio","win","doc","poll","pre","rem","root","documentElement","doScroll","createEventObject","frameElement","_autoDiscoverFunction"],"mappings":"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","file":"dropzone.min.js","sourcesContent":["\r\n/*\r\n *\r\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\r\n *\r\n * Copyright (c) 2012, Matias Meno\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n *\r\n */\r\n\r\n(function() {\r\n    var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\r\n        __slice = [].slice,\r\n        __hasProp = {}.hasOwnProperty,\r\n        __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\r\n\r\n    noop = function() {};\r\n\r\n    Emitter = (function() {\r\n        function Emitter() {}\r\n\r\n        Emitter.prototype.addEventListener = Emitter.prototype.on;\r\n\r\n        Emitter.prototype.on = function(event, fn) {\r\n            this._callbacks = this._callbacks || {};\r\n            if (!this._callbacks[event]) {\r\n                this._callbacks[event] = [];\r\n            }\r\n            this._callbacks[event].push(fn);\r\n            return this;\r\n        };\r\n\r\n        Emitter.prototype.emit = function() {\r\n            var args, callback, callbacks, event, _i, _len;\r\n            event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\r\n            this._callbacks = this._callbacks || {};\r\n            callbacks = this._callbacks[event];\r\n            if (callbacks) {\r\n                for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\r\n                    callback = callbacks[_i];\r\n                    callback.apply(this, args);\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n\r\n        Emitter.prototype.removeListener = Emitter.prototype.off;\r\n\r\n        Emitter.prototype.removeAllListeners = Emitter.prototype.off;\r\n\r\n        Emitter.prototype.removeEventListener = Emitter.prototype.off;\r\n\r\n        Emitter.prototype.off = function(event, fn) {\r\n            var callback, callbacks, i, _i, _len;\r\n            if (!this._callbacks || arguments.length === 0) {\r\n                this._callbacks = {};\r\n                return this;\r\n            }\r\n            callbacks = this._callbacks[event];\r\n            if (!callbacks) {\r\n                return this;\r\n            }\r\n            if (arguments.length === 1) {\r\n                delete this._callbacks[event];\r\n                return this;\r\n            }\r\n            for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\r\n                callback = callbacks[i];\r\n                if (callback === fn) {\r\n                    callbacks.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return Emitter;\r\n\r\n    })();\r\n\r\n    Dropzone = (function(_super) {\r\n        var extend, resolveOption;\r\n\r\n        __extends(Dropzone, _super);\r\n\r\n        Dropzone.prototype.Emitter = Emitter;\r\n\r\n\r\n        /*\r\n         This is a list of all available events you can register on a dropzone object.\r\n\r\n         You can register an event handler like this:\r\n\r\n         dropzone.on(\"dragEnter\", function() { });\r\n         */\r\n\r\n        Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\r\n\r\n        Dropzone.prototype.defaultOptions = {\r\n            url: null,\r\n            method: \"post\",\r\n            withCredentials: false,\r\n            parallelUploads: 2,\r\n            uploadMultiple: false,\r\n            maxFilesize: 256,\r\n            paramName: \"file\",\r\n            createImageThumbnails: true,\r\n            maxThumbnailFilesize: 10,\r\n            thumbnailWidth: 120,\r\n            thumbnailHeight: 120,\r\n            filesizeBase: 1000,\r\n            maxFiles: null,\r\n            filesizeBase: 1000,\r\n            params: {},\r\n            clickable: true,\r\n            ignoreHiddenFiles: true,\r\n            acceptedFiles: null,\r\n            acceptedMimeTypes: null,\r\n            autoProcessQueue: true,\r\n            autoQueue: true,\r\n            addRemoveLinks: false,\r\n            previewsContainer: null,\r\n            capture: null,\r\n            dictDefaultMessage: \"Drop files here to upload\",\r\n            dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\r\n            dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\r\n            dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\r\n            dictInvalidFileType: \"You can't upload files of this type.\",\r\n            dictResponseError: \"Server responded with {{statusCode}} code.\",\r\n            dictCancelUpload: \"Cancel upload\",\r\n            dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\r\n            dictRemoveFile: \"Remove file\",\r\n            dictRemoveFileConfirmation: null,\r\n            dictMaxFilesExceeded: \"You can not upload any more files.\",\r\n            accept: function(file, done) {\r\n                return done();\r\n            },\r\n            init: function() {\r\n                return noop;\r\n            },\r\n            forceFallback: false,\r\n            fallback: function() {\r\n                var child, messageElement, span, _i, _len, _ref;\r\n                this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\r\n                _ref = this.element.getElementsByTagName(\"div\");\r\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                    child = _ref[_i];\r\n                    if (/(^| )dz-message($| )/.test(child.className)) {\r\n                        messageElement = child;\r\n                        child.className = \"dz-message\";\r\n                        continue;\r\n                    }\r\n                }\r\n                if (!messageElement) {\r\n                    messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\r\n                    this.element.appendChild(messageElement);\r\n                }\r\n                span = messageElement.getElementsByTagName(\"span\")[0];\r\n                if (span) {\r\n                    span.textContent = this.options.dictFallbackMessage;\r\n                }\r\n                return this.element.appendChild(this.getFallbackForm());\r\n            },\r\n            resize: function(file) {\r\n                var info, srcRatio, trgRatio;\r\n                info = {\r\n                    srcX: 0,\r\n                    srcY: 0,\r\n                    srcWidth: file.width,\r\n                    srcHeight: file.height\r\n                };\r\n                srcRatio = file.width / file.height;\r\n                info.optWidth = this.options.thumbnailWidth;\r\n                info.optHeight = this.options.thumbnailHeight;\r\n                if ((info.optWidth == null) && (info.optHeight == null)) {\r\n                    info.optWidth = info.srcWidth;\r\n                    info.optHeight = info.srcHeight;\r\n                } else if (info.optWidth == null) {\r\n                    info.optWidth = srcRatio * info.optHeight;\r\n                } else if (info.optHeight == null) {\r\n                    info.optHeight = (1 / srcRatio) * info.optWidth;\r\n                }\r\n                trgRatio = info.optWidth / info.optHeight;\r\n                if (file.height < info.optHeight || file.width < info.optWidth) {\r\n                    info.trgHeight = info.srcHeight;\r\n                    info.trgWidth = info.srcWidth;\r\n                } else {\r\n                    if (srcRatio > trgRatio) {\r\n                        info.srcHeight = file.height;\r\n                        info.srcWidth = info.srcHeight * trgRatio;\r\n                    } else {\r\n                        info.srcWidth = file.width;\r\n                        info.srcHeight = info.srcWidth / trgRatio;\r\n                    }\r\n                }\r\n                info.srcX = (file.width - info.srcWidth) / 2;\r\n                info.srcY = (file.height - info.srcHeight) / 2;\r\n                return info;\r\n            },\r\n\r\n            /*\r\n             Those functions register themselves to the events on init and handle all\r\n             the user interface specific stuff. Overwriting them won't break the upload\r\n             but can break the way it's displayed.\r\n             You can overwrite them if you don't like the default behavior. If you just\r\n             want to add an additional event handler, register it on the dropzone object\r\n             and don't overwrite those options.\r\n             */\r\n            drop: function(e) {\r\n                return this.element.classList.remove(\"dz-drag-hover\");\r\n            },\r\n            dragstart: noop,\r\n            dragend: function(e) {\r\n                return this.element.classList.remove(\"dz-drag-hover\");\r\n            },\r\n            dragenter: function(e) {\r\n                return this.element.classList.add(\"dz-drag-hover\");\r\n            },\r\n            dragover: function(e) {\r\n                return this.element.classList.add(\"dz-drag-hover\");\r\n            },\r\n            dragleave: function(e) {\r\n                return this.element.classList.remove(\"dz-drag-hover\");\r\n            },\r\n            paste: noop,\r\n            reset: function() {\r\n                return this.element.classList.remove(\"dz-started\");\r\n            },\r\n            addedfile: function(file) {\r\n                var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\r\n                if (this.element === this.previewsContainer) {\r\n                    this.element.classList.add(\"dz-started\");\r\n                }\r\n                if (this.previewsContainer) {\r\n                    file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\r\n                    file.previewTemplate = file.previewElement;\r\n                    this.previewsContainer.appendChild(file.previewElement);\r\n                    _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\r\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        node = _ref[_i];\r\n                        node.textContent = file.name;\r\n                    }\r\n                    _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\r\n                    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\r\n                        node = _ref1[_j];\r\n                        node.innerHTML = this.filesize(file.size);\r\n                    }\r\n                    if (this.options.addRemoveLinks) {\r\n                        file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\r\n                        file.previewElement.appendChild(file._removeLink);\r\n                    }\r\n                    removeFileEvent = (function(_this) {\r\n                        return function(e) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            if (file.status === Dropzone.UPLOADING) {\r\n                                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\r\n                                    return _this.removeFile(file);\r\n                                });\r\n                            } else {\r\n                                if (_this.options.dictRemoveFileConfirmation) {\r\n                                    return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\r\n                                        return _this.removeFile(file);\r\n                                    });\r\n                                } else {\r\n                                    return _this.removeFile(file);\r\n                                }\r\n                            }\r\n                        };\r\n                    })(this);\r\n                    _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\r\n                    _results = [];\r\n                    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\r\n                        removeLink = _ref2[_k];\r\n                        _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\r\n                    }\r\n                    return _results;\r\n                }\r\n            },\r\n            removedfile: function(file) {\r\n                var _ref;\r\n                if (file.previewElement) {\r\n                    if ((_ref = file.previewElement) != null) {\r\n                        _ref.parentNode.removeChild(file.previewElement);\r\n                    }\r\n                }\r\n                return this._updateMaxFilesReachedClass();\r\n            },\r\n            thumbnail: function(file, dataUrl) {\r\n                var thumbnailElement, _i, _len, _ref;\r\n                if (file.previewElement) {\r\n                    file.previewElement.classList.remove(\"dz-file-preview\");\r\n                    _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\r\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        thumbnailElement = _ref[_i];\r\n                        thumbnailElement.alt = file.name;\r\n                        thumbnailElement.src = dataUrl;\r\n                    }\r\n                    return setTimeout(((function(_this) {\r\n                        return function() {\r\n                            return file.previewElement.classList.add(\"dz-image-preview\");\r\n                        };\r\n                    })(this)), 1);\r\n                }\r\n            },\r\n            error: function(file, message) {\r\n                var node, _i, _len, _ref, _results;\r\n                if (file.previewElement) {\r\n                    file.previewElement.classList.add(\"dz-error\");\r\n                    if (typeof message !== \"String\" && message.error) {\r\n                        message = message.error;\r\n                    }\r\n                    _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\r\n                    _results = [];\r\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        node = _ref[_i];\r\n                        _results.push(node.textContent = message);\r\n                    }\r\n                    return _results;\r\n                }\r\n            },\r\n            errormultiple: noop,\r\n            processing: function(file) {\r\n                if (file.previewElement) {\r\n                    file.previewElement.classList.add(\"dz-processing\");\r\n                    if (file._removeLink) {\r\n                        return file._removeLink.textContent = this.options.dictCancelUpload;\r\n                    }\r\n                }\r\n            },\r\n            processingmultiple: noop,\r\n            uploadprogress: function(file, progress, bytesSent) {\r\n                var node, _i, _len, _ref, _results;\r\n                if (file.previewElement) {\r\n                    _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\r\n                    _results = [];\r\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        node = _ref[_i];\r\n                        if (node.nodeName === 'PROGRESS') {\r\n                            _results.push(node.value = progress);\r\n                        } else {\r\n                            _results.push(node.style.width = \"\" + progress + \"%\");\r\n                        }\r\n                    }\r\n                    return _results;\r\n                }\r\n            },\r\n            totaluploadprogress: noop,\r\n            sending: noop,\r\n            sendingmultiple: noop,\r\n            success: function(file) {\r\n                if (file.previewElement) {\r\n                    return file.previewElement.classList.add(\"dz-success\");\r\n                }\r\n            },\r\n            successmultiple: noop,\r\n            canceled: function(file) {\r\n                return this.emit(\"error\", file, \"Upload canceled.\");\r\n            },\r\n            canceledmultiple: noop,\r\n            complete: function(file) {\r\n                if (file._removeLink) {\r\n                    file._removeLink.textContent = this.options.dictRemoveFile;\r\n                }\r\n                if (file.previewElement) {\r\n                    return file.previewElement.classList.add(\"dz-complete\");\r\n                }\r\n            },\r\n            completemultiple: noop,\r\n            maxfilesexceeded: noop,\r\n            maxfilesreached: noop,\r\n            queuecomplete: noop,\r\n            previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\r\n        };\r\n\r\n        extend = function() {\r\n            var key, object, objects, target, val, _i, _len;\r\n            target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\r\n            for (_i = 0, _len = objects.length; _i < _len; _i++) {\r\n                object = objects[_i];\r\n                for (key in object) {\r\n                    val = object[key];\r\n                    target[key] = val;\r\n                }\r\n            }\r\n            return target;\r\n        };\r\n\r\n        function Dropzone(element, options) {\r\n            var elementOptions, fallback, _ref;\r\n            this.element = element;\r\n            this.version = Dropzone.version;\r\n            this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\r\n            this.clickableElements = [];\r\n            this.listeners = [];\r\n            this.files = [];\r\n            if (typeof this.element === \"string\") {\r\n                this.element = document.querySelector(this.element);\r\n            }\r\n            if (!(this.element && (this.element.nodeType != null))) {\r\n                throw new Error(\"Invalid dropzone element.\");\r\n            }\r\n            if (this.element.dropzone) {\r\n                throw new Error(\"Dropzone already attached.\");\r\n            }\r\n            Dropzone.instances.push(this);\r\n            this.element.dropzone = this;\r\n            elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\r\n            this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\r\n            if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\r\n                return this.options.fallback.call(this);\r\n            }\r\n            if (this.options.url == null) {\r\n                this.options.url = this.element.getAttribute(\"action\");\r\n            }\r\n            if (!this.options.url) {\r\n                throw new Error(\"No URL provided.\");\r\n            }\r\n            if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\r\n                throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\r\n            }\r\n            if (this.options.acceptedMimeTypes) {\r\n                this.options.acceptedFiles = this.options.acceptedMimeTypes;\r\n                delete this.options.acceptedMimeTypes;\r\n            }\r\n            this.options.method = this.options.method.toUpperCase();\r\n            if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\r\n                fallback.parentNode.removeChild(fallback);\r\n            }\r\n            if (this.options.previewsContainer !== false) {\r\n                if (this.options.previewsContainer) {\r\n                    this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\r\n                } else {\r\n                    this.previewsContainer = this.element;\r\n                }\r\n            }\r\n            if (this.options.clickable) {\r\n                if (this.options.clickable === true) {\r\n                    this.clickableElements = [this.element];\r\n                } else {\r\n                    this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\r\n                }\r\n            }\r\n            this.init();\r\n        }\r\n\r\n        Dropzone.prototype.getAcceptedFiles = function() {\r\n            var file, _i, _len, _ref, _results;\r\n            _ref = this.files;\r\n            _results = [];\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                file = _ref[_i];\r\n                if (file.accepted) {\r\n                    _results.push(file);\r\n                }\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype.getRejectedFiles = function() {\r\n            var file, _i, _len, _ref, _results;\r\n            _ref = this.files;\r\n            _results = [];\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                file = _ref[_i];\r\n                if (!file.accepted) {\r\n                    _results.push(file);\r\n                }\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype.getFilesWithStatus = function(status) {\r\n            var file, _i, _len, _ref, _results;\r\n            _ref = this.files;\r\n            _results = [];\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                file = _ref[_i];\r\n                if (file.status === status) {\r\n                    _results.push(file);\r\n                }\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype.getQueuedFiles = function() {\r\n            return this.getFilesWithStatus(Dropzone.QUEUED);\r\n        };\r\n\r\n        Dropzone.prototype.getUploadingFiles = function() {\r\n            return this.getFilesWithStatus(Dropzone.UPLOADING);\r\n        };\r\n\r\n        Dropzone.prototype.getActiveFiles = function() {\r\n            var file, _i, _len, _ref, _results;\r\n            _ref = this.files;\r\n            _results = [];\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                file = _ref[_i];\r\n                if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\r\n                    _results.push(file);\r\n                }\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype.init = function() {\r\n            var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\r\n            if (this.element.tagName === \"form\") {\r\n                this.element.setAttribute(\"enctype\", \"multipart/form-data\");\r\n            }\r\n            if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\r\n                this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\r\n            }\r\n            if (this.clickableElements.length) {\r\n                setupHiddenFileInput = (function(_this) {\r\n                    return function() {\r\n                        if (_this.hiddenFileInput) {\r\n                            document.body.removeChild(_this.hiddenFileInput);\r\n                        }\r\n                        _this.hiddenFileInput = document.createElement(\"input\");\r\n                        _this.hiddenFileInput.setAttribute(\"type\", \"file\");\r\n                        if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\r\n                            _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\r\n                        }\r\n                        _this.hiddenFileInput.className = \"dz-hidden-input\";\r\n                        if (_this.options.acceptedFiles != null) {\r\n                            _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\r\n                        }\r\n                        if (_this.options.capture != null) {\r\n                            _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\r\n                        }\r\n                        _this.hiddenFileInput.style.visibility = \"hidden\";\r\n                        _this.hiddenFileInput.style.position = \"absolute\";\r\n                        _this.hiddenFileInput.style.top = \"0\";\r\n                        _this.hiddenFileInput.style.left = \"0\";\r\n                        _this.hiddenFileInput.style.height = \"0\";\r\n                        _this.hiddenFileInput.style.width = \"0\";\r\n                        document.body.appendChild(_this.hiddenFileInput);\r\n                        return _this.hiddenFileInput.addEventListener(\"change\", function() {\r\n                            var file, files, _i, _len;\r\n                            files = _this.hiddenFileInput.files;\r\n                            if (files.length) {\r\n                                for (_i = 0, _len = files.length; _i < _len; _i++) {\r\n                                    file = files[_i];\r\n                                    _this.addFile(file);\r\n                                }\r\n                            }\r\n                            return setupHiddenFileInput();\r\n                        });\r\n                    };\r\n                })(this);\r\n                setupHiddenFileInput();\r\n            }\r\n            this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\r\n            _ref1 = this.events;\r\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\r\n                eventName = _ref1[_i];\r\n                this.on(eventName, this.options[eventName]);\r\n            }\r\n            this.on(\"uploadprogress\", (function(_this) {\r\n                return function() {\r\n                    return _this.updateTotalUploadProgress();\r\n                };\r\n            })(this));\r\n            this.on(\"removedfile\", (function(_this) {\r\n                return function() {\r\n                    return _this.updateTotalUploadProgress();\r\n                };\r\n            })(this));\r\n            this.on(\"canceled\", (function(_this) {\r\n                return function(file) {\r\n                    return _this.emit(\"complete\", file);\r\n                };\r\n            })(this));\r\n            this.on(\"complete\", (function(_this) {\r\n                return function(file) {\r\n                    if (_this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\r\n                        return setTimeout((function() {\r\n                            return _this.emit(\"queuecomplete\");\r\n                        }), 0);\r\n                    }\r\n                };\r\n            })(this));\r\n            noPropagation = function(e) {\r\n                e.stopPropagation();\r\n                if (e.preventDefault) {\r\n                    return e.preventDefault();\r\n                } else {\r\n                    return e.returnValue = false;\r\n                }\r\n            };\r\n            this.listeners = [\r\n                {\r\n                    element: this.element,\r\n                    events: {\r\n                        \"dragstart\": (function(_this) {\r\n                            return function(e) {\r\n                                return _this.emit(\"dragstart\", e);\r\n                            };\r\n                        })(this),\r\n                        \"dragenter\": (function(_this) {\r\n                            return function(e) {\r\n                                noPropagation(e);\r\n                                return _this.emit(\"dragenter\", e);\r\n                            };\r\n                        })(this),\r\n                        \"dragover\": (function(_this) {\r\n                            return function(e) {\r\n                                var efct;\r\n                                try {\r\n                                    efct = e.dataTransfer.effectAllowed;\r\n                                } catch (_error) {}\r\n                                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\r\n                                noPropagation(e);\r\n                                return _this.emit(\"dragover\", e);\r\n                            };\r\n                        })(this),\r\n                        \"dragleave\": (function(_this) {\r\n                            return function(e) {\r\n                                return _this.emit(\"dragleave\", e);\r\n                            };\r\n                        })(this),\r\n                        \"drop\": (function(_this) {\r\n                            return function(e) {\r\n                                noPropagation(e);\r\n                                return _this.drop(e);\r\n                            };\r\n                        })(this),\r\n                        \"dragend\": (function(_this) {\r\n                            return function(e) {\r\n                                return _this.emit(\"dragend\", e);\r\n                            };\r\n                        })(this)\r\n                    }\r\n                }\r\n            ];\r\n            this.clickableElements.forEach((function(_this) {\r\n                return function(clickableElement) {\r\n                    return _this.listeners.push({\r\n                        element: clickableElement,\r\n                        events: {\r\n                            \"click\": function(evt) {\r\n                                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\r\n                                    return _this.hiddenFileInput.click();\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n            })(this));\r\n            this.enable();\r\n            return this.options.init.call(this);\r\n        };\r\n\r\n        Dropzone.prototype.destroy = function() {\r\n            var _ref;\r\n            this.disable();\r\n            this.removeAllFiles(true);\r\n            if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\r\n                this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\r\n                this.hiddenFileInput = null;\r\n            }\r\n            delete this.element.dropzone;\r\n            return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\r\n        };\r\n\r\n        Dropzone.prototype.updateTotalUploadProgress = function() {\r\n            var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\r\n            totalBytesSent = 0;\r\n            totalBytes = 0;\r\n            activeFiles = this.getActiveFiles();\r\n            if (activeFiles.length) {\r\n                _ref = this.getActiveFiles();\r\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                    file = _ref[_i];\r\n                    totalBytesSent += file.upload.bytesSent;\r\n                    totalBytes += file.upload.total;\r\n                }\r\n                totalUploadProgress = 100 * totalBytesSent / totalBytes;\r\n            } else {\r\n                totalUploadProgress = 100;\r\n            }\r\n            return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\r\n        };\r\n\r\n        Dropzone.prototype._getParamName = function(n) {\r\n            if (typeof this.options.paramName === \"function\") {\r\n                return this.options.paramName(n);\r\n            } else {\r\n                return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype.getFallbackForm = function() {\r\n            var existingFallback, fields, fieldsString, form;\r\n            if (existingFallback = this.getExistingFallback()) {\r\n                return existingFallback;\r\n            }\r\n            fieldsString = \"<div class=\\\"dz-fallback\\\">\";\r\n            if (this.options.dictFallbackText) {\r\n                fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\r\n            }\r\n            fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\r\n            fields = Dropzone.createElement(fieldsString);\r\n            if (this.element.tagName !== \"FORM\") {\r\n                form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\r\n                form.appendChild(fields);\r\n            } else {\r\n                this.element.setAttribute(\"enctype\", \"multipart/form-data\");\r\n                this.element.setAttribute(\"method\", this.options.method);\r\n            }\r\n            return form != null ? form : fields;\r\n        };\r\n\r\n        Dropzone.prototype.getExistingFallback = function() {\r\n            var fallback, getFallback, tagName, _i, _len, _ref;\r\n            getFallback = function(elements) {\r\n                var el, _i, _len;\r\n                for (_i = 0, _len = elements.length; _i < _len; _i++) {\r\n                    el = elements[_i];\r\n                    if (/(^| )fallback($| )/.test(el.className)) {\r\n                        return el;\r\n                    }\r\n                }\r\n            };\r\n            _ref = [\"div\", \"form\"];\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                tagName = _ref[_i];\r\n                if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\r\n                    return fallback;\r\n                }\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype.setupEventListeners = function() {\r\n            var elementListeners, event, listener, _i, _len, _ref, _results;\r\n            _ref = this.listeners;\r\n            _results = [];\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                elementListeners = _ref[_i];\r\n                _results.push((function() {\r\n                    var _ref1, _results1;\r\n                    _ref1 = elementListeners.events;\r\n                    _results1 = [];\r\n                    for (event in _ref1) {\r\n                        listener = _ref1[event];\r\n                        _results1.push(elementListeners.element.addEventListener(event, listener, false));\r\n                    }\r\n                    return _results1;\r\n                })());\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype.removeEventListeners = function() {\r\n            var elementListeners, event, listener, _i, _len, _ref, _results;\r\n            _ref = this.listeners;\r\n            _results = [];\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                elementListeners = _ref[_i];\r\n                _results.push((function() {\r\n                    var _ref1, _results1;\r\n                    _ref1 = elementListeners.events;\r\n                    _results1 = [];\r\n                    for (event in _ref1) {\r\n                        listener = _ref1[event];\r\n                        _results1.push(elementListeners.element.removeEventListener(event, listener, false));\r\n                    }\r\n                    return _results1;\r\n                })());\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype.disable = function() {\r\n            var file, _i, _len, _ref, _results;\r\n            this.clickableElements.forEach(function(element) {\r\n                return element.classList.remove(\"dz-clickable\");\r\n            });\r\n            this.removeEventListeners();\r\n            _ref = this.files;\r\n            _results = [];\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                file = _ref[_i];\r\n                _results.push(this.cancelUpload(file));\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype.enable = function() {\r\n            this.clickableElements.forEach(function(element) {\r\n                return element.classList.add(\"dz-clickable\");\r\n            });\r\n            return this.setupEventListeners();\r\n        };\r\n\r\n        Dropzone.prototype.filesize = function(size) {\r\n            var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\r\n            units = ['TB', 'GB', 'MB', 'KB', 'b'];\r\n            selectedSize = selectedUnit = null;\r\n            for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\r\n                unit = units[i];\r\n                cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\r\n                if (size >= cutoff) {\r\n                    selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\r\n                    selectedUnit = unit;\r\n                    break;\r\n                }\r\n            }\r\n            selectedSize = Math.round(10 * selectedSize) / 10;\r\n            return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\r\n        };\r\n\r\n        Dropzone.prototype._updateMaxFilesReachedClass = function() {\r\n            if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\r\n                if (this.getAcceptedFiles().length === this.options.maxFiles) {\r\n                    this.emit('maxfilesreached', this.files);\r\n                }\r\n                return this.element.classList.add(\"dz-max-files-reached\");\r\n            } else {\r\n                return this.element.classList.remove(\"dz-max-files-reached\");\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype.drop = function(e) {\r\n            var files, items;\r\n            if (!e.dataTransfer) {\r\n                return;\r\n            }\r\n            this.emit(\"drop\", e);\r\n            files = e.dataTransfer.files;\r\n            if (files.length) {\r\n                items = e.dataTransfer.items;\r\n                if (items && items.length && (items[0].webkitGetAsEntry != null)) {\r\n                    this._addFilesFromItems(items);\r\n                } else {\r\n                    this.handleFiles(files);\r\n                }\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype.paste = function(e) {\r\n            var items, _ref;\r\n            if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\r\n                return;\r\n            }\r\n            this.emit(\"paste\", e);\r\n            items = e.clipboardData.items;\r\n            if (items.length) {\r\n                return this._addFilesFromItems(items);\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype.handleFiles = function(files) {\r\n            var file, _i, _len, _results;\r\n            _results = [];\r\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\r\n                file = files[_i];\r\n                _results.push(this.addFile(file));\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype._addFilesFromItems = function(items) {\r\n            var entry, item, _i, _len, _results;\r\n            _results = [];\r\n            for (_i = 0, _len = items.length; _i < _len; _i++) {\r\n                item = items[_i];\r\n                if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\r\n                    if (entry.isFile) {\r\n                        _results.push(this.addFile(item.getAsFile()));\r\n                    } else if (entry.isDirectory) {\r\n                        _results.push(this._addFilesFromDirectory(entry, entry.name));\r\n                    } else {\r\n                        _results.push(void 0);\r\n                    }\r\n                } else if (item.getAsFile != null) {\r\n                    if ((item.kind == null) || item.kind === \"file\") {\r\n                        _results.push(this.addFile(item.getAsFile()));\r\n                    } else {\r\n                        _results.push(void 0);\r\n                    }\r\n                } else {\r\n                    _results.push(void 0);\r\n                }\r\n            }\r\n            return _results;\r\n        };\r\n\r\n        Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\r\n            var dirReader, entriesReader;\r\n            dirReader = directory.createReader();\r\n            entriesReader = (function(_this) {\r\n                return function(entries) {\r\n                    var entry, _i, _len;\r\n                    for (_i = 0, _len = entries.length; _i < _len; _i++) {\r\n                        entry = entries[_i];\r\n                        if (entry.isFile) {\r\n                            entry.file(function(file) {\r\n                                if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\r\n                                    return;\r\n                                }\r\n                                file.fullPath = \"\" + path + \"/\" + file.name;\r\n                                return _this.addFile(file);\r\n                            });\r\n                        } else if (entry.isDirectory) {\r\n                            _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\r\n                        }\r\n                    }\r\n                };\r\n            })(this);\r\n            return dirReader.readEntries(entriesReader, function(error) {\r\n                return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\r\n            });\r\n        };\r\n\r\n        Dropzone.prototype.accept = function(file, done) {\r\n            if (file.size > this.options.maxFilesize * 1024 * 1024) {\r\n                return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\r\n            } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\r\n                return done(this.options.dictInvalidFileType);\r\n            } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\r\n                done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\r\n                return this.emit(\"maxfilesexceeded\", file);\r\n            } else {\r\n                return this.options.accept.call(this, file, done);\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype.addFile = function(file) {\r\n            file.upload = {\r\n                progress: 0,\r\n                total: file.size,\r\n                bytesSent: 0\r\n            };\r\n            this.files.push(file);\r\n            file.status = Dropzone.ADDED;\r\n            this.emit(\"addedfile\", file);\r\n            this._enqueueThumbnail(file);\r\n            return this.accept(file, (function(_this) {\r\n                return function(error) {\r\n                    if (error) {\r\n                        file.accepted = false;\r\n                        _this._errorProcessing([file], error);\r\n                    } else {\r\n                        file.accepted = true;\r\n                        if (_this.options.autoQueue) {\r\n                            _this.enqueueFile(file);\r\n                        }\r\n                    }\r\n                    return _this._updateMaxFilesReachedClass();\r\n                };\r\n            })(this));\r\n        };\r\n\r\n        Dropzone.prototype.enqueueFiles = function(files) {\r\n            var file, _i, _len;\r\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\r\n                file = files[_i];\r\n                this.enqueueFile(file);\r\n            }\r\n            return null;\r\n        };\r\n\r\n        Dropzone.prototype.enqueueFile = function(file) {\r\n            if (file.status === Dropzone.ADDED && file.accepted === true) {\r\n                file.status = Dropzone.QUEUED;\r\n                if (this.options.autoProcessQueue) {\r\n                    return setTimeout(((function(_this) {\r\n                        return function() {\r\n                            return _this.processQueue();\r\n                        };\r\n                    })(this)), 0);\r\n                }\r\n            } else {\r\n                throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype._thumbnailQueue = [];\r\n\r\n        Dropzone.prototype._processingThumbnail = false;\r\n\r\n        Dropzone.prototype._enqueueThumbnail = function(file) {\r\n            if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\r\n                this._thumbnailQueue.push(file);\r\n                return setTimeout(((function(_this) {\r\n                    return function() {\r\n                        return _this._processThumbnailQueue();\r\n                    };\r\n                })(this)), 0);\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype._processThumbnailQueue = function() {\r\n            if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\r\n                return;\r\n            }\r\n            this._processingThumbnail = true;\r\n            return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {\r\n                return function() {\r\n                    _this._processingThumbnail = false;\r\n                    return _this._processThumbnailQueue();\r\n                };\r\n            })(this));\r\n        };\r\n\r\n        Dropzone.prototype.removeFile = function(file) {\r\n            if (file.status === Dropzone.UPLOADING) {\r\n                this.cancelUpload(file);\r\n            }\r\n            this.files = without(this.files, file);\r\n            this.emit(\"removedfile\", file);\r\n            if (this.files.length === 0) {\r\n                return this.emit(\"reset\");\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\r\n            var file, _i, _len, _ref;\r\n            if (cancelIfNecessary == null) {\r\n                cancelIfNecessary = false;\r\n            }\r\n            _ref = this.files.slice();\r\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                file = _ref[_i];\r\n                if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\r\n                    this.removeFile(file);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n\r\n        Dropzone.prototype.createThumbnail = function(file, callback) {\r\n            var fileReader;\r\n            fileReader = new FileReader;\r\n            fileReader.onload = (function(_this) {\r\n                return function() {\r\n                    if (file.type === \"image/svg+xml\") {\r\n                        _this.emit(\"thumbnail\", file, fileReader.result);\r\n                        if (callback != null) {\r\n                            callback();\r\n                        }\r\n                        return;\r\n                    }\r\n                    return _this.createThumbnailFromUrl(file, fileReader.result, callback);\r\n                };\r\n            })(this);\r\n            return fileReader.readAsDataURL(file);\r\n        };\r\n\r\n        Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback) {\r\n            var img;\r\n            img = document.createElement(\"img\");\r\n            img.onload = (function(_this) {\r\n                return function() {\r\n                    var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\r\n                    file.width = img.width;\r\n                    file.height = img.height;\r\n                    resizeInfo = _this.options.resize.call(_this, file);\r\n                    if (resizeInfo.trgWidth == null) {\r\n                        resizeInfo.trgWidth = resizeInfo.optWidth;\r\n                    }\r\n                    if (resizeInfo.trgHeight == null) {\r\n                        resizeInfo.trgHeight = resizeInfo.optHeight;\r\n                    }\r\n                    canvas = document.createElement(\"canvas\");\r\n                    ctx = canvas.getContext(\"2d\");\r\n                    canvas.width = resizeInfo.trgWidth;\r\n                    canvas.height = resizeInfo.trgHeight;\r\n                    drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\r\n                    thumbnail = canvas.toDataURL(\"image/png\");\r\n                    _this.emit(\"thumbnail\", file, thumbnail);\r\n                    if (callback != null) {\r\n                        return callback();\r\n                    }\r\n                };\r\n            })(this);\r\n            if (callback != null) {\r\n                img.onerror = callback;\r\n            }\r\n            return img.src = imageUrl;\r\n        };\r\n\r\n        Dropzone.prototype.processQueue = function() {\r\n            var i, parallelUploads, processingLength, queuedFiles;\r\n            parallelUploads = this.options.parallelUploads;\r\n            processingLength = this.getUploadingFiles().length;\r\n            i = processingLength;\r\n            if (processingLength >= parallelUploads) {\r\n                return;\r\n            }\r\n            queuedFiles = this.getQueuedFiles();\r\n            if (!(queuedFiles.length > 0)) {\r\n                return;\r\n            }\r\n            if (this.options.uploadMultiple) {\r\n                return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\r\n            } else {\r\n                while (i < parallelUploads) {\r\n                    if (!queuedFiles.length) {\r\n                        return;\r\n                    }\r\n                    this.processFile(queuedFiles.shift());\r\n                    i++;\r\n                }\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype.processFile = function(file) {\r\n            return this.processFiles([file]);\r\n        };\r\n\r\n        Dropzone.prototype.processFiles = function(files) {\r\n            var file, _i, _len;\r\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\r\n                file = files[_i];\r\n                file.processing = true;\r\n                file.status = Dropzone.UPLOADING;\r\n                this.emit(\"processing\", file);\r\n            }\r\n            if (this.options.uploadMultiple) {\r\n                this.emit(\"processingmultiple\", files);\r\n            }\r\n            return this.uploadFiles(files);\r\n        };\r\n\r\n        Dropzone.prototype._getFilesWithXhr = function(xhr) {\r\n            var file, files;\r\n            return files = (function() {\r\n                var _i, _len, _ref, _results;\r\n                _ref = this.files;\r\n                _results = [];\r\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                    file = _ref[_i];\r\n                    if (file.xhr === xhr) {\r\n                        _results.push(file);\r\n                    }\r\n                }\r\n                return _results;\r\n            }).call(this);\r\n        };\r\n\r\n        Dropzone.prototype.cancelUpload = function(file) {\r\n            var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\r\n            if (file.status === Dropzone.UPLOADING) {\r\n                groupedFiles = this._getFilesWithXhr(file.xhr);\r\n                for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\r\n                    groupedFile = groupedFiles[_i];\r\n                    groupedFile.status = Dropzone.CANCELED;\r\n                }\r\n                file.xhr.abort();\r\n                for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\r\n                    groupedFile = groupedFiles[_j];\r\n                    this.emit(\"canceled\", groupedFile);\r\n                }\r\n                if (this.options.uploadMultiple) {\r\n                    this.emit(\"canceledmultiple\", groupedFiles);\r\n                }\r\n            } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\r\n                file.status = Dropzone.CANCELED;\r\n                this.emit(\"canceled\", file);\r\n                if (this.options.uploadMultiple) {\r\n                    this.emit(\"canceledmultiple\", [file]);\r\n                }\r\n            }\r\n            if (this.options.autoProcessQueue) {\r\n                return this.processQueue();\r\n            }\r\n        };\r\n\r\n        resolveOption = function() {\r\n            var args, option;\r\n            option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\r\n            if (typeof option === 'function') {\r\n                return option.apply(this, args);\r\n            }\r\n            return option;\r\n        };\r\n\r\n        Dropzone.prototype.uploadFile = function(file) {\r\n            return this.uploadFiles([file]);\r\n        };\r\n\r\n        Dropzone.prototype.uploadFiles = function(files) {\r\n            var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\r\n            xhr = new XMLHttpRequest();\r\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\r\n                file = files[_i];\r\n                file.xhr = xhr;\r\n            }\r\n            method = resolveOption(this.options.method, files);\r\n            url = resolveOption(this.options.url, files);\r\n            xhr.open(method, url, true);\r\n            xhr.withCredentials = !!this.options.withCredentials;\r\n            response = null;\r\n            handleError = (function(_this) {\r\n                return function() {\r\n                    var _j, _len1, _results;\r\n                    _results = [];\r\n                    for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\r\n                        file = files[_j];\r\n                        _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\r\n                    }\r\n                    return _results;\r\n                };\r\n            })(this);\r\n            updateProgress = (function(_this) {\r\n                return function(e) {\r\n                    var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\r\n                    if (e != null) {\r\n                        progress = 100 * e.loaded / e.total;\r\n                        for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\r\n                            file = files[_j];\r\n                            file.upload = {\r\n                                progress: progress,\r\n                                total: e.total,\r\n                                bytesSent: e.loaded\r\n                            };\r\n                        }\r\n                    } else {\r\n                        allFilesFinished = true;\r\n                        progress = 100;\r\n                        for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\r\n                            file = files[_k];\r\n                            if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\r\n                                allFilesFinished = false;\r\n                            }\r\n                            file.upload.progress = progress;\r\n                            file.upload.bytesSent = file.upload.total;\r\n                        }\r\n                        if (allFilesFinished) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    _results = [];\r\n                    for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\r\n                        file = files[_l];\r\n                        _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\r\n                    }\r\n                    return _results;\r\n                };\r\n            })(this);\r\n            xhr.onload = (function(_this) {\r\n                return function(e) {\r\n                    var _ref;\r\n                    if (files[0].status === Dropzone.CANCELED) {\r\n                        return;\r\n                    }\r\n                    if (xhr.readyState !== 4) {\r\n                        return;\r\n                    }\r\n                    response = xhr.responseText;\r\n                    if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\r\n                        try {\r\n                            response = JSON.parse(response);\r\n                        } catch (_error) {\r\n                            e = _error;\r\n                            response = \"Invalid JSON response from server.\";\r\n                        }\r\n                    }\r\n                    updateProgress();\r\n                    if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\r\n                        return handleError();\r\n                    } else {\r\n                        return _this._finished(files, response, e);\r\n                    }\r\n                };\r\n            })(this);\r\n            xhr.onerror = (function(_this) {\r\n                return function() {\r\n                    if (files[0].status === Dropzone.CANCELED) {\r\n                        return;\r\n                    }\r\n                    return handleError();\r\n                };\r\n            })(this);\r\n            progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\r\n            progressObj.onprogress = updateProgress;\r\n            headers = {\r\n                \"Accept\": \"application/json\",\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"X-Requested-With\": \"XMLHttpRequest\"\r\n            };\r\n            if (this.options.headers) {\r\n                extend(headers, this.options.headers);\r\n            }\r\n            for (headerName in headers) {\r\n                headerValue = headers[headerName];\r\n                xhr.setRequestHeader(headerName, headerValue);\r\n            }\r\n            formData = new FormData();\r\n            if (this.options.params) {\r\n                _ref1 = this.options.params;\r\n                for (key in _ref1) {\r\n                    value = _ref1[key];\r\n                    formData.append(key, value);\r\n                }\r\n            }\r\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\r\n                file = files[_j];\r\n                this.emit(\"sending\", file, xhr, formData);\r\n            }\r\n            if (this.options.uploadMultiple) {\r\n                this.emit(\"sendingmultiple\", files, xhr, formData);\r\n            }\r\n            if (this.element.tagName === \"FORM\") {\r\n                _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\r\n                for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\r\n                    input = _ref2[_k];\r\n                    inputName = input.getAttribute(\"name\");\r\n                    inputType = input.getAttribute(\"type\");\r\n                    if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\r\n                        _ref3 = input.options;\r\n                        for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\r\n                            option = _ref3[_l];\r\n                            if (option.selected) {\r\n                                formData.append(inputName, option.value);\r\n                            }\r\n                        }\r\n                    } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\r\n                        formData.append(inputName, input.value);\r\n                    }\r\n                }\r\n            }\r\n            for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\r\n                formData.append(this._getParamName(i), files[i], files[i].name);\r\n            }\r\n            return xhr.send(formData);\r\n        };\r\n\r\n        Dropzone.prototype._finished = function(files, responseText, e) {\r\n            var file, _i, _len;\r\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\r\n                file = files[_i];\r\n                file.status = Dropzone.SUCCESS;\r\n                this.emit(\"success\", file, responseText, e);\r\n                this.emit(\"complete\", file);\r\n            }\r\n            if (this.options.uploadMultiple) {\r\n                this.emit(\"successmultiple\", files, responseText, e);\r\n                this.emit(\"completemultiple\", files);\r\n            }\r\n            if (this.options.autoProcessQueue) {\r\n                return this.processQueue();\r\n            }\r\n        };\r\n\r\n        Dropzone.prototype._errorProcessing = function(files, message, xhr) {\r\n            var file, _i, _len;\r\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\r\n                file = files[_i];\r\n                file.status = Dropzone.ERROR;\r\n                this.emit(\"error\", file, message, xhr);\r\n                this.emit(\"complete\", file);\r\n            }\r\n            if (this.options.uploadMultiple) {\r\n                this.emit(\"errormultiple\", files, message, xhr);\r\n                this.emit(\"completemultiple\", files);\r\n            }\r\n            if (this.options.autoProcessQueue) {\r\n                return this.processQueue();\r\n            }\r\n        };\r\n\r\n        return Dropzone;\r\n\r\n    })(Emitter);\r\n\r\n    Dropzone.version = \"4.0.1\";\r\n\r\n    Dropzone.options = {};\r\n\r\n    Dropzone.optionsForElement = function(element) {\r\n        if (element.getAttribute(\"id\")) {\r\n            return Dropzone.options[camelize(element.getAttribute(\"id\"))];\r\n        } else {\r\n            return void 0;\r\n        }\r\n    };\r\n\r\n    Dropzone.instances = [];\r\n\r\n    Dropzone.forElement = function(element) {\r\n        if (typeof element === \"string\") {\r\n            element = document.querySelector(element);\r\n        }\r\n        if ((element != null ? element.dropzone : void 0) == null) {\r\n            throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\r\n        }\r\n        return element.dropzone;\r\n    };\r\n\r\n    Dropzone.autoDiscover = true;\r\n\r\n    Dropzone.discover = function() {\r\n        var checkElements, dropzone, dropzones, _i, _len, _results;\r\n        if (document.querySelectorAll) {\r\n            dropzones = document.querySelectorAll(\".dropzone\");\r\n        } else {\r\n            dropzones = [];\r\n            checkElements = function(elements) {\r\n                var el, _i, _len, _results;\r\n                _results = [];\r\n                for (_i = 0, _len = elements.length; _i < _len; _i++) {\r\n                    el = elements[_i];\r\n                    if (/(^| )dropzone($| )/.test(el.className)) {\r\n                        _results.push(dropzones.push(el));\r\n                    } else {\r\n                        _results.push(void 0);\r\n                    }\r\n                }\r\n                return _results;\r\n            };\r\n            checkElements(document.getElementsByTagName(\"div\"));\r\n            checkElements(document.getElementsByTagName(\"form\"));\r\n        }\r\n        _results = [];\r\n        for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\r\n            dropzone = dropzones[_i];\r\n            if (Dropzone.optionsForElement(dropzone) !== false) {\r\n                _results.push(new Dropzone(dropzone));\r\n            } else {\r\n                _results.push(void 0);\r\n            }\r\n        }\r\n        return _results;\r\n    };\r\n\r\n    Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\r\n\r\n    Dropzone.isBrowserSupported = function() {\r\n        var capableBrowser, regex, _i, _len, _ref;\r\n        capableBrowser = true;\r\n        if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\r\n            if (!(\"classList\" in document.createElement(\"a\"))) {\r\n                capableBrowser = false;\r\n            } else {\r\n                _ref = Dropzone.blacklistedBrowsers;\r\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                    regex = _ref[_i];\r\n                    if (regex.test(navigator.userAgent)) {\r\n                        capableBrowser = false;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            capableBrowser = false;\r\n        }\r\n        return capableBrowser;\r\n    };\r\n\r\n    without = function(list, rejectedItem) {\r\n        var item, _i, _len, _results;\r\n        _results = [];\r\n        for (_i = 0, _len = list.length; _i < _len; _i++) {\r\n            item = list[_i];\r\n            if (item !== rejectedItem) {\r\n                _results.push(item);\r\n            }\r\n        }\r\n        return _results;\r\n    };\r\n\r\n    camelize = function(str) {\r\n        return str.replace(/[\\-_](\\w)/g, function(match) {\r\n            return match.charAt(1).toUpperCase();\r\n        });\r\n    };\r\n\r\n    Dropzone.createElement = function(string) {\r\n        var div;\r\n        div = document.createElement(\"div\");\r\n        div.innerHTML = string;\r\n        return div.childNodes[0];\r\n    };\r\n\r\n    Dropzone.elementInside = function(element, container) {\r\n        if (element === container) {\r\n            return true;\r\n        }\r\n        while (element = element.parentNode) {\r\n            if (element === container) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Dropzone.getElement = function(el, name) {\r\n        var element;\r\n        if (typeof el === \"string\") {\r\n            element = document.querySelector(el);\r\n        } else if (el.nodeType != null) {\r\n            element = el;\r\n        }\r\n        if (element == null) {\r\n            throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\r\n        }\r\n        return element;\r\n    };\r\n\r\n    Dropzone.getElements = function(els, name) {\r\n        var e, el, elements, _i, _j, _len, _len1, _ref;\r\n        if (els instanceof Array) {\r\n            elements = [];\r\n            try {\r\n                for (_i = 0, _len = els.length; _i < _len; _i++) {\r\n                    el = els[_i];\r\n                    elements.push(this.getElement(el, name));\r\n                }\r\n            } catch (_error) {\r\n                e = _error;\r\n                elements = null;\r\n            }\r\n        } else if (typeof els === \"string\") {\r\n            elements = [];\r\n            _ref = document.querySelectorAll(els);\r\n            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\r\n                el = _ref[_j];\r\n                elements.push(el);\r\n            }\r\n        } else if (els.nodeType != null) {\r\n            elements = [els];\r\n        }\r\n        if (!((elements != null) && elements.length)) {\r\n            throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\r\n        }\r\n        return elements;\r\n    };\r\n\r\n    Dropzone.confirm = function(question, accepted, rejected) {\r\n        if (window.confirm(question)) {\r\n            return accepted();\r\n        } else if (rejected != null) {\r\n            return rejected();\r\n        }\r\n    };\r\n\r\n    Dropzone.isValidFile = function(file, acceptedFiles) {\r\n        var baseMimeType, mimeType, validType, _i, _len;\r\n        if (!acceptedFiles) {\r\n            return true;\r\n        }\r\n        acceptedFiles = acceptedFiles.split(\",\");\r\n        mimeType = file.type;\r\n        baseMimeType = mimeType.replace(/\\/.*$/, \"\");\r\n        for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\r\n            validType = acceptedFiles[_i];\r\n            validType = validType.trim();\r\n            if (validType.charAt(0) === \".\") {\r\n                if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\r\n                    return true;\r\n                }\r\n            } else if (/\\/\\*$/.test(validType)) {\r\n                if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                if (mimeType === validType) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    if (typeof jQuery !== \"undefined\" && jQuery !== null) {\r\n        jQuery.fn.dropzone = function(options) {\r\n            return this.each(function() {\r\n                return new Dropzone(this, options);\r\n            });\r\n        };\r\n    }\r\n\r\n    if (typeof module !== \"undefined\" && module !== null) {\r\n        module.exports = Dropzone;\r\n    } else {\r\n        window.Dropzone = Dropzone;\r\n    }\r\n\r\n    Dropzone.ADDED = \"added\";\r\n\r\n    Dropzone.QUEUED = \"queued\";\r\n\r\n    Dropzone.ACCEPTED = Dropzone.QUEUED;\r\n\r\n    Dropzone.UPLOADING = \"uploading\";\r\n\r\n    Dropzone.PROCESSING = Dropzone.UPLOADING;\r\n\r\n    Dropzone.CANCELED = \"canceled\";\r\n\r\n    Dropzone.ERROR = \"error\";\r\n\r\n    Dropzone.SUCCESS = \"success\";\r\n\r\n\r\n    /*\r\n\r\n     Bugfix for iOS 6 and 7\r\n     Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\r\n     based on the work of https://github.com/stomita/ios-imagefile-megapixel\r\n     */\r\n\r\n    detectVerticalSquash = function(img) {\r\n        var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\r\n        iw = img.naturalWidth;\r\n        ih = img.naturalHeight;\r\n        canvas = document.createElement(\"canvas\");\r\n        canvas.width = 1;\r\n        canvas.height = ih;\r\n        ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n        data = ctx.getImageData(0, 0, 1, ih).data;\r\n        sy = 0;\r\n        ey = ih;\r\n        py = ih;\r\n        while (py > sy) {\r\n            alpha = data[(py - 1) * 4 + 3];\r\n            if (alpha === 0) {\r\n                ey = py;\r\n            } else {\r\n                sy = py;\r\n            }\r\n            py = (ey + sy) >> 1;\r\n        }\r\n        ratio = py / ih;\r\n        if (ratio === 0) {\r\n            return 1;\r\n        } else {\r\n            return ratio;\r\n        }\r\n    };\r\n\r\n    drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\r\n        var vertSquashRatio;\r\n        vertSquashRatio = detectVerticalSquash(img);\r\n        return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\r\n    };\r\n\r\n\r\n    /*\r\n     * contentloaded.js\r\n     *\r\n     * Author: Diego Perini (diego.perini at gmail.com)\r\n     * Summary: cross-browser wrapper for DOMContentLoaded\r\n     * Updated: 20101020\r\n     * License: MIT\r\n     * Version: 1.2\r\n     *\r\n     * URL:\r\n     * http://javascript.nwbox.com/ContentLoaded/\r\n     * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\r\n     */\r\n\r\n    contentLoaded = function(win, fn) {\r\n        var add, doc, done, init, poll, pre, rem, root, top;\r\n        done = false;\r\n        top = true;\r\n        doc = win.document;\r\n        root = doc.documentElement;\r\n        add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\r\n        rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\r\n        pre = (doc.addEventListener ? \"\" : \"on\");\r\n        init = function(e) {\r\n            if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\r\n                return;\r\n            }\r\n            (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\r\n            if (!done && (done = true)) {\r\n                return fn.call(win, e.type || e);\r\n            }\r\n        };\r\n        poll = function() {\r\n            var e;\r\n            try {\r\n                root.doScroll(\"left\");\r\n            } catch (_error) {\r\n                e = _error;\r\n                setTimeout(poll, 50);\r\n                return;\r\n            }\r\n            return init(\"poll\");\r\n        };\r\n        if (doc.readyState !== \"complete\") {\r\n            if (doc.createEventObject && root.doScroll) {\r\n                try {\r\n                    top = !win.frameElement;\r\n                } catch (_error) {}\r\n                if (top) {\r\n                    poll();\r\n                }\r\n            }\r\n            doc[add](pre + \"DOMContentLoaded\", init, false);\r\n            doc[add](pre + \"readystatechange\", init, false);\r\n            return win[add](pre + \"load\", init, false);\r\n        }\r\n    };\r\n\r\n    Dropzone._autoDiscoverFunction = function() {\r\n        if (Dropzone.autoDiscover) {\r\n            return Dropzone.discover();\r\n        }\r\n    };\r\n\r\n    contentLoaded(window, Dropzone._autoDiscoverFunction);\r\n\r\n}).call(this);"],"sourceRoot":"/source/"}